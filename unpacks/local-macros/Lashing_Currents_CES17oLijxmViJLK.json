{
  "name": "Lashing Currents",
  "type": "script",
  "scope": "global",
  "author": "v0RvORcwGexWLCjc",
  "img": "icons/magic/water/waves-water-blue.webp",
  "command": "//Check for exactly one selected token\nif (canvas.tokens.controlled.length > 1) return ui.notifications.error(\"Please select only a single token.\");\nconst token = canvas.tokens.controlled[0] ?? game.user.character?.getActiveTokens()[0];\nif (!token) return ui.notifications.error(\"Please select exactly one token or assign yourself a character.\");\nconst actor = token.actor;\nasync function pickItemFromActor(actor, {itemType=null, otherFilter=null, held=false, title=null, dialogOptions={}, silent=false}={})  {  \n  const prependArticle = (word) => {\n    const vowels = 'aeiou';\n    const article = (vowels.indexOf(word[0].toLowerCase()) > -1) ? 'an ' : 'a ';\n    return article + word; \n  }\n  const PHYSICAL_TYPES = [\n    \"armor\",\n    \"consumable\",\n    \"equipment\",\n    \"treasure\",\n    \"weapon\"\n  ]\n  let filteredItems;\n  if (!itemType || itemType === 'physical') {\n    itemType ??= \"physical (default)\";\n    filteredItems = actor.items.filter(i => PHYSICAL_TYPES.includes(i.type)) ?? [];    \n  } else {\n    filteredItems = actor.items.filter(i => i.type === itemType) ?? [];\n  }\n  if (!filteredItems.length) {\n    if (!silent) ui.notifications.error(`Selected actor lacks any items of type \"${itemType}\"`);\n    return null;\n  }\n  \n  if (otherFilter && typeof otherFilter === 'function') {\n    filteredItems = filteredItems.filter(otherFilter);\n    if (!filteredItems.length) {\n      if (!silent) ui.notifications.error(`Provided filter \n      ${otherFilter.toString()}\n      produced no items.`);\n      return null;\n    } \n  }\n  \n  if (held) {\n    filteredItems = filteredItems.filter(i => i.system.equipped.carryType === 'held') ?? [];\n    if (!filteredItems.length) {\n      if (!silent) ui.notifications.error(`Selected actor is not holding any matching items.`);\n      return null;\n    }\n  }\n  \n  if (filteredItems.length === 1) return filteredItems[0];\n  \n  const style = `<style>\n  .esheyw-sel-item-dialog .dialog-buttons {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n  }\n  .esheyw-sel-item-dialog img {\n    width: 40px;\n    height: 40px;\n    margin: auto 2px auto 2px;\n  }\n  .esheyw-sel-item-dialog button {\n    display: flex;\n    flex-direction: row;\n    justify-content: left;\n    padding: 0px;\n    margin: 0px;\n  }\n  .esheyw-sel-item-dialog button span.item-name {\n    text-align: left;\n    margin: auto;\n    margin-left: 2%;\n  }\n  .esheyw-sel-item-dialog button span.dupe-id {\n    font-size: 0.7em\n    text-align: right;\n    margin: auto;\n    margin-right: 2%;\n    color: var(--color-cool-3);\n  }\n  </style>`;\n  const names = {};\n  for (const item of filteredItems) {\n    names[item.name] ??= 0;\n    names[item.name]++;\n  }\n  const buttons = Object.fromEntries(filteredItems.map(i => {\n    let label = `<img src=\"${i.img}\" alt=\"${i.name}\" data-tooltip=\"${i.id}\" /><span class=\"item-name\">${i.name}</span>`;\n    if (names[i.name] > 1) {\n      label += `<span class=\"dupe-id\">(${i.id})</span>`;\n    }\n    return [i.id, { label }];\n  }));\n  title ??= `Select ${prependArticle(itemType)}`.titleCase();\n  const dialogData = {\n    title,\n    content: style,\n    close: () => {return null;},\n    buttons,\n  };\n  dialogOptions = mergeObject({\n      classes: [\"esheyw-sel-item-dialog\"]\n    },\n    dialogOptions\n  );\n  const response = await Dialog.wait(dialogData, dialogOptions);\n  return actor.items.get(response);\n}\nconst FORBIDDEN_RUNES = [\n  \"bloodbane\",\n  \"kinWarding\"\n];\nconst LC_JSON = `{\"name\":\"Lashing Currents\",\"type\":\"weapon\",\"effects\":[],\"system\":{\"description\":{\"gm\":\"\",\"value\":\"\"},\"rules\":[],\"slug\":null,\"_migration\":{\"version\":0.88,\"lastMigration\":null},\"traits\":{\"otherTags\":[],\"value\":[\"disarm\",\"finesse\",\"reach\",\"trip\",\"versatile-s\"],\"rarity\":\"common\"},\"publication\":{\"title\":\"\",\"authors\":\"\",\"license\":\"OGL\",\"remaster\":false},\"level\":{\"value\":0},\"quantity\":1,\"baseItem\":null,\"hp\":{\"value\":0,\"max\":0},\"hardness\":0,\"weight\":{\"value\":\"-\"},\"equippedBulk\":{\"value\":\"\"},\"price\":{\"value\":{}},\"equipped\":{\"carryType\":\"worn\",\"invested\":null,\"handsHeld\":0},\"stackGroup\":null,\"negateBulk\":{\"value\":\"0\"},\"containerId\":null,\"size\":\"med\",\"material\":{\"type\":null,\"grade\":null},\"identification\":{\"status\":\"identified\",\"unidentified\":{\"name\":\"Unusual Weapon\",\"img\":\"systems/pf2e/icons/unidentified_item_icons/weapon.webp\",\"data\":{\"description\":{\"value\":\"\"}}},\"misidentified\":{}},\"usage\":{\"value\":\"held-in-one-hand\"},\"category\":\"simple\",\"group\":\"flail\",\"bonus\":{\"value\":0},\"damage\":{\"dice\":1,\"die\":\"d4\",\"damageType\":\"bludgeoning\",\"persistent\":null},\"bonusDamage\":{\"value\":0},\"splashDamage\":{\"value\":0},\"range\":null,\"reload\":{\"value\":null},\"potencyRune\":{\"value\":null},\"strikingRune\":{\"value\":null},\"specific\":{\"value\":true},\"propertyRune1\":{\"value\":null},\"propertyRune2\":{\"value\":null},\"propertyRune3\":{\"value\":null},\"propertyRune4\":{\"value\":null},\"property1\":{\"value\":\"\",\"dice\":0,\"die\":\"\",\"damageType\":\"\",\"critDice\":0,\"critDie\":\"\",\"critDamage\":\"\",\"critDamageType\":\"\",\"strikeConditionType\":\"\",\"strikeConditionValue\":null,\"criticalConditionType\":\"\",\"criticalConditionValue\":null}},\"_id\":\"7rgHJF6iysFJiGP9\",\"img\":\"icons/magic/water/waves-water-blue.webp\",\"folder\":null,\"sort\":0,\"ownership\":{\"default\":0,\"v0RvORcwGexWLCjc\":3},\"flags\":{\"pf2e\":{\"isLashingCurrents\":true}},\"_stats\":{\"systemId\":\"pf2e\",\"systemVersion\":\"5.8.3\",\"coreVersion\":\"11.315\",\"createdTime\":1699836861139,\"modifiedTime\":1699837109046,\"lastModifiedBy\":\"v0RvORcwGexWLCjc\"}}`;\n\n\nconst existingLC = await pickItemFromActor(actor, {\n  // held: true,\n  itemType: 'weapon',\n  otherFilter: (i) => i.flags.pf2e.isLashingCurrents,\n  silent: true,\n});\nif (!existingLC) {\n  const relicWeapon = await pickItemFromActor(actor, {\n    held: true,\n    itemType: 'weapon'\n  });  \n  if (!relicWeapon) return ui.notifications.warn('No weapon selected.');\n  const relicWeaponData = relicWeapon.toObject();\n  const LC_DATA = JSON.parse(LC_JSON);\n  LC_DATA.system.strikingRune.value = relicWeaponData.system.strikingRune.value;\n  LC_DATA.system.potencyRune.value = relicWeaponData.system.potencyRune.value;\n  const propertyRunes = [];\n  for (let i = 1; i <= 4; i++) {\n    const rune = relicWeaponData.system[`propertyRune${i}`].value;\n    if (!rune || FORBIDDEN_RUNES.includes(rune)) continue;\n    propertyRunes.push(rune)\n  }\n  \n  for (let i = 0; i < propertyRunes.length; i++) {\n    LC_DATA.system[`propertyRune${i+1}`] = {value: propertyRunes[i]};\n  }\n  \n  LC_DATA.flags.pf2e.originalRelicWeapon = JSON.stringify(relicWeaponData);\n  const [lashingCurrents] = await actor.createEmbeddedDocuments(\"Item\",[LC_DATA]);\n  await lashingCurrents.update({\n    \"system.equipped.carryType\": relicWeapon.system.equipped.carryType,\n    \"system.equipped.handsHeld\": relicWeapon.system.equipped.handsHeld    \n  });\n  await relicWeapon.delete();\n} else {\n  const originalRelicWeaponData = JSON.parse(existingLC.flags.pf2e.originalRelicWeapon);\n  const [originalRelicWeapon] = await actor.createEmbeddedDocuments(\"Item\", [originalRelicWeaponData]);\n  await originalRelicWeapon.update({\n    \"system.equipped.carryType\": existingLC.system.equipped.carryType,\n    \"system.equipped.handsHeld\": existingLC.system.equipped.handsHeld\n  });\n  await existingLC.delete();\n}",
  "folder": "MUrlWbVP9uj79bSv",
  "ownership": {
    "default": 0,
    "v0RvORcwGexWLCjc": 3
  },
  "flags": {
    "core": {}
  },
  "_stats": {
    "systemId": "pf2e",
    "systemVersion": "5.10.5",
    "coreVersion": "11.315",
    "createdTime": 1699835288680,
    "modifiedTime": 1702343866185,
    "lastModifiedBy": "v0RvORcwGexWLCjc"
  },
  "_id": "CES17oLijxmViJLK",
  "sort": 100000,
  "_key": "!macros!CES17oLijxmViJLK"
}
